I"È<p><img src="/images/r2d21.png" alt="3-in-1 Scooter Board Wheelchair" />
<strong>Aim:</strong></p>

<p>Develop a community device that is accessible to both able-bodied individuals and wheelchair users, particularly those with paraplegia.</p>

<p><strong>Summary:</strong></p>

<p>I developed the electronics module for a proof-of-concept prototype, building upon an existing mechanical system. This project focused on enhancing usability, control, and data accessibility, making the device more functional and user-friendly.</p>

<p>We implemented a wireless throttle to control the speed of the device, allowing for seamless transitions of the modes of operation. We also designed an intuitive start-up mechanism that eliminates the need for complex manual inputs, ensuring a smoother user experience.</p>

<p>Additionally, I created a real-time data logging system that transmits key performance metrics wirelessly, enabling remote monitoring and analysis for performance evaluation and debugging.</p>

<p>I also engineered a custom locking mechanism to enhance safety and stability, ensuring smooth transitions between different operational modes.</p>

<p><strong>Takeaways:</strong></p>

<p>This was my first mechatronics system development project, and it was a continuous learning experience. My skill set grew significantly over the course of this internship. I gained hands-on experience with soldering wires and perf boards, implementing digital PID control on a motor, designing mechanisms for switching between different modes of operation and 3D printing. Additionally, I became a more proficient Arduino programmer, refining my coding skills for embedded systems.</p>

<p><strong>Media:</strong></p>

<p><strong>Attachments:</strong></p>

<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.min.js"></script>

<div class="pdf-thumbnail-container">
  
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".pdf-thumbnail").forEach((canvas) => {
      const url = canvas.getAttribute("data-url");

      pdfjsLib.getDocument(url).promise.then(pdf => {
        return pdf.getPage(1);
      }).then(page => {
        const desiredWidth = 200; // Adjust this to control thumbnail width
        const viewport = page.getViewport({ scale: 1 }); // Default scale (1) to get original width

        const scale = desiredWidth / viewport.width; // Calculate scale based on desired width
        const scaledViewport = page.getViewport({ scale });

        const context = canvas.getContext("2d");

        // Set canvas size to match the scaled page
        canvas.width = scaledViewport.width;
        canvas.height = scaledViewport.height;

        const renderContext = {
          canvasContext: context,
          viewport: scaledViewport
        };

        return page.render(renderContext).promise;
      });

      canvas.addEventListener("click", () => {
        window.open(url, "_blank");
      });
    });
  });
</script>

:ET
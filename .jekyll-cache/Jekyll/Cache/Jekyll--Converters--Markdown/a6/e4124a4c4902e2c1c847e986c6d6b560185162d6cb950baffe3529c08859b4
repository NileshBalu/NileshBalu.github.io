I"a<p><img src="/images/glove_1.png" alt="A Wearable Hand Assistive Device" width="50%" />
<!-- ![A Wearable Hand Assistive Device](/images/glove_1.png) --></p>

<p><strong>Aim:</strong></p>

<p>Develop a proof-of-concept prototype of a hand assistive device for people with partial paralysis in their hands as a result of a spinal cord injury.
The device must be compliant, must contain force feedback and should provide more than one degree of freedom in the thumb.</p>

<p><strong>Method:</strong></p>

<p>Inspired by the working principle of the human finger, we employed an underactuated tendon mechanism to actuate the userâ€™s fingers. 
We modeled the tension as a function of the link lengths, the link orientations and the angle of attachment. We also modeled the forward kinematics of the finger under flexion. 
Using simulations on Simulink Multibody, we estimated the torque required to produce a contact force of 10N. Using this estimated value, we chose the required motor.</p>

<p>A Teensy 4.1 dev board was used to control the device. We chose a motor with a maximum torque rating of 0.8 kg-cm. Force sensors were installed on the fingertips to close the control loop and mantain a constant grip force. We used surface-EMG sensors to estimate user intention. A 3-D printed hand was used as the testing base.</p>

<p>Our prototype was able to perform 2 gestures - cylindrical grasp and lateral pinch.</p>

<p><strong>Media:</strong></p>

<p><img src="/images/glove_2.png" alt="A Wearable Hand Assistive Device" width="50%" /></p>

<p><strong>Takeaways:</strong></p>

<p>This was my first large-scale solo project. I gained experience managing all 3 verticals - the coding, the mechanical design of the prototype and the electronic module. This was the first time I worked with compliant systems and was exposed to the caveats of soft robotic mechanisms. I also gained experience developing a state-machine to control the system.</p>

<p><strong>Attachments:</strong></p>

<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.min.js"></script>

<div class="pdf-thumbnail-container">
  
    <div class="pdf-thumbnail-wrapper">
      <canvas class="pdf-thumbnail" data-url="/attachments/BTP_Report.pdf"></canvas>
      <a href="/attachments/BTP_Report.pdf" target="_blank">Read Thesis</a>
    </div>
  
    <div class="pdf-thumbnail-wrapper">
      <canvas class="pdf-thumbnail" data-url="/attachments/BTP_Template.pdf"></canvas>
      <a href="/attachments/BTP_Template.pdf" target="_blank">View Poster</a>
    </div>
  
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".pdf-thumbnail").forEach((canvas) => {
      const url = canvas.getAttribute("data-url");

      pdfjsLib.getDocument(url).promise.then(pdf => {
        return pdf.getPage(1);
      }).then(page => {
        const desiredWidth = 200; // Adjust this to control thumbnail width
        const viewport = page.getViewport({ scale: 1 }); // Default scale (1) to get original width

        const scale = desiredWidth / viewport.width; // Calculate scale based on desired width
        const scaledViewport = page.getViewport({ scale });

        const context = canvas.getContext("2d");

        // Set canvas size to match the scaled page
        canvas.width = scaledViewport.width;
        canvas.height = scaledViewport.height;

        const renderContext = {
          canvasContext: context,
          viewport: scaledViewport
        };

        return page.render(renderContext).promise;
      });

      canvas.addEventListener("click", () => {
        window.open(url, "_blank");
      });
    });
  });
</script>

:ET